package main

import (
	"encoding/json"
	"fmt"
)

//随便找个例子
/*{
"resultCode": "200",
"reason": "Return Successd!",
"result": {
"province": "浙江",
"city": "杭州",
"areaCode": "0571",
"zip": "310000",
"company": "中国移动",
"card": ""
}
}*/
//json 字符串转go struct  https://mholt.github.io/json-to-go/

type AutoGenerated struct {
	ResultCode string `json:"resultCode"`
	Reason     string `json:"reason"`
	Result     struct {
		Province string `json:"province"`
		City     string `json:"city"`
		AreaCode string `json:"areaCode"`
		Zip      string `json:"zip"`
		Company  string `json:"company"`
		Card     string `json:"card"`
	} `json:"result"`
}

func main() {
	//json字符串转struct对象
	jsonStr := `
		{
			"resultCode": "200",
			"reason": "Return Successd!",
			"result": {
				"province": "浙江",
				"city": "杭州",
				"areaCode": "0571",
				"zip": "310000",
				"company": "中国移动",
				"card": ""
			}
		}
	`

	var mobile AutoGenerated
	err := json.Unmarshal([]byte(jsonStr), &mobile)
	if err != nil {
		fmt.Println(err.Error())
	}
	fmt.Println(mobile.ResultCode)
	fmt.Println(mobile.Reason)
	fmt.Println(mobile.Result.City)

	fmt.Println(mobile)

	//struct对象转json字符串
	toJsonBytes, toJsonErr := json.Marshal(mobile)
	if toJsonErr != nil {
		fmt.Println(toJsonErr)
	} else {
		fmt.Println(string(toJsonBytes))
	}

}
